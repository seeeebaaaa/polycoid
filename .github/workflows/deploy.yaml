name: Build and Push Docker Compose Images to GHCR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build_django:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.SERVER_ENV_PROD }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Django Image
        run: |
          docker compose -f docker-compose.prod.yml build django
          docker compose -f docker-compose.prod.yml push django
  
  build_nginx:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.SERVER_ENV_PROD }}" > .env

      - name: Copy SSL secrets
        run: |
          touch nginx/polycoid.com_ssl_certificate.crt.pem 
          echo "${{ secrets.POLYCOID_SSL_CERTIFICATE }}" > nginx/polycoid.com_ssl_certificate.crt.pem 
          touch nginx/*.polycoid.com_private_key.key.pem
          echo "${{ secrets.POLYCOID_PRIVATE_KEY }}" > nginx/*.polycoid.com_private_key.key.pem
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
         
      - name: Build and Push Nginx Image
        run: |
          docker compose -f docker-compose.prod.yml build nginx
          docker compose -f docker-compose.prod.yml push nginx

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_django
      - build_nginx
    permissions:
      contents: read
      packages: write
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/uwu/polycoid
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            touch .env
            echo "${{ secrets.SERVER_ENV_PROD }}" > .env
            export $(grep -v '^#' .env | xargs -d '\n')
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d

            # Wait for Django container to be healthy
            echo "Waiting for Django container to be healthy..."
            while [ "$(sudo docker inspect --format='{{.State.Health.Status}}' django)" != "healthy" ]; do
                sleep 2
            done

            echo "Django is healthy, running migrations..."
            sudo docker compose exec django python3 manage.py migrate
            sudo docker compose exec django python3 manage.py collectstatic --noinput
